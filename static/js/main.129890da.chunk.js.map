{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","Captitalize","msg","About","myStyle","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.129890da.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n//  import { Link } from 'react-router-dom/cjs/react-router-dom'; \r\n import { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li>\r\n        </ul>\r\n        {/* <div className='d-flex'>\r\n         <div className='bg-primary rounded mx-2' onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px',cursor:\"pointer\"}}></div>\r\n         <div className='bg-danger rounded mx-2' onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px',cursor:\"pointer\"}}></div>\r\n         <div className='bg-success rounded mx-2' onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px',cursor:\"pointer\"}}></div>\r\n         <div className='bg-warning rounded mx-2' onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px',cursor:\"pointer\"}}></div>\r\n        <div className='bg-light rounded mx-2' onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width:'30px',cursor:\"pointer\" ,border:\"2px solid black\"}}></div>\r\n        <div className='bg-dark rounded mx-2' onClick={()=>{props.toggleMode('dark')}} style={{height:'30px', width:'30px',cursor:\"pointer\" ,border:\"2px solid white\"}}></div>\r\n        </div> */}\r\n          <div className={`form-check form-switch text-${(props.mode===\"light\")?\"dark\":\"light\"}`}>\r\n          {/*  eslint-disable-next-line */}\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle mode</label>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired\r\n\r\n};\r\nNavbar.defaultProps={\r\n    title:\"set title here\",\r\n    aboutText:\"About\"\r\n};\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nfunction TextForm(props) {\r\n    const [text,setText]=useState(\"\")\r\n\r\n    const handleUPClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case!\",\"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lower case!\",\"success\");\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText=\"\"\r\n        setText(newText);\r\n        props.showAlert(\"Text is cleared\",\"success\");\r\n    }\r\n    const handleCopy=()=>{\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert(\"Copied to clipboard\",\"success\");\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra spaces are removed\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n      <h1 className='mb-4'>{props.heading}</h1>\r\n      <div className='mb-3'>\r\n        <textarea className='form-control' value={text} style={{backgroundColor:props.mode===\"dark\"?\"#13466e\":\"white\",color:props.mode===\"dark\"?\"white\":\"black\"}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUPClick}>convert to uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>convert to lowercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n      \r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length } Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Captitalize =(word)=>{\r\nconst lower=word.toLowerCase();\r\nreturn lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n   { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{Captitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n  </div>}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\n\r\nfunction About(props) {\r\n    // const[myStyle,setMyStyle]=useState( {color:\"black\",\r\n    // backgroundColor:\"white\"})\r\n\r\n   let myStyle={\r\n    color:props.mode===\"dark\"?\"white\":\"#042743\",\r\n    backgroundColor:props.mode===\"dark\"?\"rgb(36 74 104)\":\"white\"\r\n   } \r\n\r\n   \r\n   \r\n  return (\r\n    <div className='container' >\r\n        <h1 className='my-3'style={{color:props.mode===\"dark\"?\"white\":\"#042743\"}} >About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        <strong>Analyze your text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        Textutils gives you a way to analyze your text quickly and efficiently .Be it word count ,Character count.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n       <strong>Free to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        Textutil is a free charcter counter tool provides instant charcter count and word count statistics for a given text. Textutils reports the number of words and characters .Thus it is suitable for writing text with word/characters limit.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n      <strong>Browser compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        This word counter software works in any web browser such as chrome, firefox, internet explorer, opera. It suits to count character in facebook, blog, books, excel document, pdf document, essays etc.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React , { useState} from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  // const removeBodyClasses=()=>{\n  //   document.body.classList.remove(\"bg-light\")\n  //   document.body.classList.remove(\"bg-dark\")\n  //   document.body.classList.remove(\"bg-primary\")\n  //   document.body.classList.remove(\"bg-success\")\n  //   document.body.classList.remove(\"bg-danger\")\n  //   document.body.classList.remove(\"bg-warning\")\n  // }\n\n  const toggleMode = () => {\n    // removeBodyClasses();\n    // console.log(cls);\n    // document.body.classList.add(\"bg-\"+cls)\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/about\" element={ <About mode={mode}/>}/>\n          <Route path=\"/\" element={ <TextForm\n              heading=\"Try TextUtils- Word counter, Character counter, Remove extra spaces\"\n              mode={mode}\n              showAlert={showAlert}\n            />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}